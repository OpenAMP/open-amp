name: open-amp lib Continuous Integration

on:
  push:
    branches: [ master ]
    paths-ignore:
      - docs/**
      - cmake/**
      - scripts/**
  pull_request:
    branches: [ master ]
    paths-ignore:
      - docs/**
      - cmake/**
      - scripts/**

jobs:
  checkpatch_review:
    name: checkpatch review
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install python dependencies
      run: |
        pip3 install setuptools
        pip3 install junitparser gitlint
    - name: Run Compliance Tests
      id: compliance
      env:
        BASE_REF: ${{ github.base_ref }}
      run: |
        export PATH=$PATH:~/.local/bin
        export PROJECT_BASE=$PWD
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git rebase origin/${BASE_REF}
        export
        ./scripts/ci/check_compliance.py -m checkpatch  -m Gitlint -m Identity -c origin/${BASE_REF}.. || true

    - name: upload-results
      uses: actions/upload-artifact@master
      continue-on-error: True
      with:
        name: compliance.xml
        path: compliance.xml

    - name: check-warns
      run: |
        if [ -s checkpatch.txt ]; then
           errors=$(cat checkpatch.txt)
           errors="${errors//'%'/'%25'}"
           errors="${errors//$'\n'/'%0A'}"
           errors="${errors//$'\r'/'%0D'}"
           echo "::error file=Checkpatch.txt::$errors"
           exit=1
        fi
        if [ -s Identity.txt ]; then
           errors=$(cat Identity.txt)
           errors="${errors//'%'/'%25'}"
           errors="${errors//$'\n'/'%0A'}"
           errors="${errors//$'\r'/'%0D'}"
           echo "::error file=Identity.txt::$errors"
           exit=1
        fi
        if [ -s Gitlint.txt ]; then
           errors=$(cat Gitlint.txt)
           errors="${errors//'%'/'%25'}"
           errors="${errors//$'\n'/'%0A'}"
           errors="${errors//$'\r'/'%0D'}"
           echo "::error file=Gitlint.txt::$errors"
           exit=1
        fi
        if [ ${exit} == 1 ]; then
          exit 1;
        fi
  platform_builds:
    name: check builds on different platforms
    runs-on: ubuntu-latest
    steps:
    - name: Checkout open-amp
      uses: actions/checkout@v2
    - name: Checkout libmetal
      uses: actions/checkout@v2
      with:
        repository: OpenAMP/libmetal
        path: libmetal
    - name: build for Linux
      id: build_linux
      uses: ./.github/actions/build_ci
      with:
        target: linux
    - name: build for Zephyr
      id: build_Zephyr
      uses: ./.github/actions/build_ci
      with:
        target: zephyr
    - name: build for generic arm
      id: build_generic
      uses: ./.github/actions/build_ci
      with:
        target: generic
